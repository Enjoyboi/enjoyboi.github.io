---
layout: essay  
type: essay  
title: "Tracking Time and Learning From It (Effort Estimation Reflection)"  
date: 2025-05-10  
published: true  
labels:  
  - Effort Estimation  
  - Project Reflection  
  - ICS 314  
---

<img width="200px" class="rounded float-start pe-4" src="../img/effort-tracking/time-tracking-clock.png">

Tracking Time and Learning From It  
When we first started tracking our coding and non-coding time for the Campus Careers project, I didn’t think too much of it. I figured it was just another spreadsheet to fill out. But by the end of the project, I realized it actually gave me a better understanding of how I work—and where my time goes.

### How I Estimated Effort  
I usually made my estimates based on how confident I felt about a task. If it was something familiar like modifying a UI or adding a Prisma model, I’d estimate 1–2 hours. If it involved backend logic, validation, or Playwright testing, I’d add extra time just in case. I didn’t use any fancy tools, mostly just made educated guesses and adjusted them based on past experiences from Milestone 1 and 2.

### Tracking Actual Time  
To track my time, I used a mix of stopwatch timing and rough estimates. If I was working in VSCode, I’d check the clock before I started and again when I stopped. Sometimes I forgot to log right away, so I’d look back at GitHub commits or recall how long a feature took. I tried to be honest—even if it meant writing “3 hours” for something that should’ve taken one. I’d rather be real than underestimate.

### What I Noticed Over Time  
One thing that surprised me was how much time the small stuff took—debugging, renaming files, fixing merge conflicts. Those things weren’t part of the original estimates, but they still ate up hours. I also noticed I was spending more time on admin features and less on styling, which helped us split up tasks more fairly by the end.

### What I Learned  
Effort tracking helped me think ahead more. I’d ask myself “Is this worth 2 hours or 5?” and plan my evening better. It made me work with more intention. It also helped during check-ins with teammates—knowing that we all tracked our time made it easier to talk about who needed help and where we were stuck.

### Final Thoughts  
I used to think effort estimation was just a formality, but now I see it’s a tool for growth. It’s not about being perfect with the numbers—it’s about improving how you plan and being honest about how long things really take. Going forward, I want to keep doing this kind of tracking for my own projects. It actually helped me become more self-aware as a developer.

---

